{"ast":null,"code":"import * as i0 from \"@angular/core\";\nimport * as i1 from \"../servers.service\";\nimport * as i2 from \"@angular/router\";\nimport * as i3 from \"../initial-modal/initial-modal.component\";\nimport * as i4 from \"../navigation-sidebar/navigation-sidebar.component\";\nimport * as i5 from \"../server-sidebar/server-sidebar.component\";\nexport class ServersComponent {\n  constructor(serversService, router, route) {\n    this.serversService = serversService;\n    this.router = router;\n    this.route = route;\n    this.servers = [];\n    this.showCreateServerModal = false;\n  }\n  ngOnInit() {\n    this.serversService.getServers().subscribe(data => {\n      this.servers = data;\n      // Redirect to the first server if the user has any.\n      let firstServer = this.servers.at(0);\n      if (firstServer) {\n        let firstChannel = firstServer.channels.at(0);\n        if (firstChannel) this.router.navigate([\"servers\", firstServer.id, 'channels', firstChannel.id]);else this.router.navigate([\"servers\", firstServer.id]);\n      } else {\n        this.showCreateServerModal = true;\n      }\n      this.route.paramMap.subscribe(params => {\n        let id = params.get('serverId');\n        if (id) {\n          let server = this.servers.find(s => s.id === parseInt(id));\n          if (server) {\n            console.log(server);\n            this.currentServer = server;\n          }\n        }\n      });\n    });\n  }\n}\nServersComponent.ɵfac = function ServersComponent_Factory(t) {\n  return new (t || ServersComponent)(i0.ɵɵdirectiveInject(i1.ServersService), i0.ɵɵdirectiveInject(i2.Router), i0.ɵɵdirectiveInject(i2.ActivatedRoute));\n};\nServersComponent.ɵcmp = /*@__PURE__*/i0.ɵɵdefineComponent({\n  type: ServersComponent,\n  selectors: [[\"app-servers\"]],\n  decls: 7,\n  vars: 4,\n  consts: [[1, \"w-full\", \"h-screen\", \"overflow-hidden\", \"flex\", \"m-0\", \"p-0\"], [3, \"servers\", \"currentServerId\"], [1, \"text-white\"], [3, \"open\"]],\n  template: function ServersComponent_Template(rf, ctx) {\n    if (rf & 1) {\n      i0.ɵɵelementStart(0, \"div\", 0);\n      i0.ɵɵelement(1, \"app-navigation-sidebar\", 1);\n      i0.ɵɵelementStart(2, \"div\");\n      i0.ɵɵelement(3, \"app-server-sidebar\");\n      i0.ɵɵelementEnd();\n      i0.ɵɵelementStart(4, \"span\", 2);\n      i0.ɵɵtext(5);\n      i0.ɵɵelementEnd();\n      i0.ɵɵelement(6, \"app-initial-modal\", 3);\n      i0.ɵɵelementEnd();\n    }\n    if (rf & 2) {\n      i0.ɵɵadvance(1);\n      i0.ɵɵproperty(\"servers\", ctx.servers)(\"currentServerId\", ctx.currentServer == null ? null : ctx.currentServer.id);\n      i0.ɵɵadvance(4);\n      i0.ɵɵtextInterpolate1(\"Current server: \", ctx.currentServer == null ? null : ctx.currentServer.name, \"\");\n      i0.ɵɵadvance(1);\n      i0.ɵɵproperty(\"open\", ctx.showCreateServerModal);\n    }\n  },\n  dependencies: [i3.InitialModalComponent, i4.NavigationSidebarComponent, i5.ServerSidebarComponent],\n  styles: [\"\\n/*# sourceMappingURL=data:application/json;charset=utf-8;base64,eyJ2ZXJzaW9uIjozLCJzb3VyY2VzIjpbXSwibmFtZXMiOltdLCJtYXBwaW5ncyI6IiIsInNvdXJjZVJvb3QiOiIifQ== */\"]\n});","map":{"version":3,"mappings":";;;;;;AAUA,OAAM,MAAOA,gBAAgB;EAK3BC,YACUC,cAA8B,EAC9BC,MAAc,EACfC,KAAqB;IAFpB,mBAAc,GAAdF,cAAc;IACd,WAAM,GAANC,MAAM;IACP,UAAK,GAALC,KAAK;IAPd,YAAO,GAAa,EAAE;IAEtB,0BAAqB,GAAG,KAAK;EAM1B;EAEHC,QAAQ;IACN,IAAI,CAACH,cAAc,CAACI,UAAU,EAAE,CAACC,SAAS,CAAEC,IAAI,IAAI;MAClD,IAAI,CAACC,OAAO,GAAGD,IAAI;MACnB;MACA,IAAIE,WAAW,GAAG,IAAI,CAACD,OAAO,CAACE,EAAE,CAAC,CAAC,CAAC;MAEpC,IAAID,WAAW,EAAE;QACf,IAAIE,YAAY,GAAGF,WAAW,CAACG,QAAQ,CAACF,EAAE,CAAC,CAAC,CAAC;QAC7C,IAAIC,YAAY,EACd,IAAI,CAACT,MAAM,CAACW,QAAQ,CAAC,CAAC,SAAS,EAAEJ,WAAW,CAACK,EAAE,EAAE,UAAU,EAAEH,YAAY,CAACG,EAAE,CAAC,CAAC,CAAC,KAE/E,IAAI,CAACZ,MAAM,CAACW,QAAQ,CAAC,CAAC,SAAS,EAAEJ,WAAW,CAACK,EAAE,CAAC,CAAC;OACpD,MACI;QACH,IAAI,CAACC,qBAAqB,GAAG,IAAI;;MAGnC,IAAI,CAACZ,KAAK,CAACa,QAAQ,CAACV,SAAS,CAACW,MAAM,IAAG;QACrC,IAAIH,EAAE,GAAGG,MAAM,CAACC,GAAG,CAAC,UAAU,CAAC;QAC/B,IAAIJ,EAAE,EAAE;UACN,IAAIK,MAAM,GAAG,IAAI,CAACX,OAAO,CAACY,IAAI,CAACC,CAAC,IAAIA,CAAC,CAACP,EAAE,KAAKQ,QAAQ,CAACR,EAAG,CAAC,CAAC;UAC3D,IAAIK,MAAM,EAAE;YACVI,OAAO,CAACC,GAAG,CAACL,MAAM,CAAC;YACnB,IAAI,CAACM,aAAa,GAAGN,MAAM;;;MAGjC,CAAC,CAAC;IACJ,CAAC,CAAC;EACJ;;AAvCWpB,gBAAgB;mBAAhBA,gBAAgB;AAAA;AAAhBA,gBAAgB;QAAhBA,gBAAgB;EAAA2B;EAAAC;EAAAC;EAAAC;EAAAC;IAAA;MCV7BC,8BAA0D;MACtDA,4CAAmF;MACnFA,2BAAK;MACDA,qCAAsB;MAC1BA,iBAAM;MACNA,+BAAyB;MAAAA,YAAuC;MAAAA,iBAAO;MACvEA,uCAAmD;MACvDA,iBAAM;;;MANsBA,eAAmB;MAAnBA,qCAAmB;MAIlBA,eAAuC;MAAvCA,wGAAuC;MAC7CA,eAA8B;MAA9BA,gDAA8B","names":["ServersComponent","constructor","serversService","router","route","ngOnInit","getServers","subscribe","data","servers","firstServer","at","firstChannel","channels","navigate","id","showCreateServerModal","paramMap","params","get","server","find","s","parseInt","console","log","currentServer","selectors","decls","vars","consts","template","i0"],"sourceRoot":"","sources":["C:\\Users\\anndr\\source\\repos\\DiscordAngualar2\\ClientApp\\src\\app\\servers\\servers.component.ts","C:\\Users\\anndr\\source\\repos\\DiscordAngualar2\\ClientApp\\src\\app\\servers\\servers.component.html"],"sourcesContent":["import { Component, OnInit } from '@angular/core';\nimport { ServersService } from '../servers.service';\nimport { Server} from '../models/server';\nimport { ActivatedRoute, Router } from '@angular/router';\n\n@Component({\n  selector: 'app-servers',\n  templateUrl: './servers.component.html',\n  styleUrls: ['./servers.component.css']\n})\nexport class ServersComponent implements OnInit {\n  servers: Server[] = [];\n  currentServer?: Server;\n  showCreateServerModal = false;\n\n  constructor(\n    private serversService: ServersService, \n    private router: Router,\n    public route: ActivatedRoute\n  ) {}\n\n  ngOnInit(): void {\n    this.serversService.getServers().subscribe((data) => {\n      this.servers = data;\n      // Redirect to the first server if the user has any.\n      let firstServer = this.servers.at(0);\n\n      if (firstServer) {\n        let firstChannel = firstServer.channels.at(0);\n        if (firstChannel) \n          this.router.navigate([\"servers\", firstServer.id, 'channels', firstChannel.id]);\n        else\n          this.router.navigate([\"servers\", firstServer.id]);\n      }\n      else {\n        this.showCreateServerModal = true;\n      }\n\n      this.route.paramMap.subscribe(params => {\n        let id = params.get('serverId');\n        if (id) {\n          let server = this.servers.find(s => s.id === parseInt(id!));\n          if (server) {\n            console.log(server)\n            this.currentServer = server;\n          }\n        }\n      });\n    })\n  }\n}\n","<div class=\"w-full h-screen overflow-hidden flex m-0 p-0\">\n    <app-navigation-sidebar [servers]=\"servers\" [currentServerId]=\"currentServer?.id\"/>\n    <div>\n        <app-server-sidebar />\n    </div>\n    <span class=\"text-white\">Current server: {{currentServer?.name}}</span>\n    <app-initial-modal [open]=\"showCreateServerModal\"/>\n</div>"]},"metadata":{},"sourceType":"module","externalDependencies":[]}