{"ast":null,"code":"import { BrowserModule } from '@angular/platform-browser';\nimport { inject } from '@angular/core';\nimport { ReactiveFormsModule } from '@angular/forms';\nimport { HTTP_INTERCEPTORS, HttpClientModule } from '@angular/common/http';\nimport { Router, RouterModule } from '@angular/router';\nimport { AppComponent } from './app.component';\nimport { NavMenuComponent } from './nav-menu/nav-menu.component';\nimport { HomeComponent } from './home/home.component';\nimport { CounterComponent } from './counter/counter.component';\nimport { FetchDataComponent } from './fetch-data/fetch-data.component';\nimport { LoginComponent } from './login/login.component';\nimport { AuthenticationInterceptor } from './interceptor';\nimport { StorageService } from './storage-service.service';\nimport { DialogComponent } from './dialog/dialog.component';\nimport { InitialModalComponent } from './initial-modal/initial-modal.component';\nimport { ServersComponent } from './servers/servers.component';\nimport { NavigationSidebarComponent } from './navigation-sidebar/navigation-sidebar.component';\nimport * as i0 from \"@angular/core\";\nimport * as i1 from \"@angular/platform-browser\";\nimport * as i2 from \"@angular/router\";\nexport const canActivate = (route, state) => {\n  const storageService = inject(StorageService);\n  const router = inject(Router);\n  if (!storageService.isLoggedIn()) {\n    router.navigate(['login']);\n    return false;\n  }\n  return true;\n};\nexport class AppModule {}\nAppModule.ɵfac = function AppModule_Factory(t) {\n  return new (t || AppModule)();\n};\nAppModule.ɵmod = /*@__PURE__*/i0.ɵɵdefineNgModule({\n  type: AppModule,\n  bootstrap: [AppComponent]\n});\nAppModule.ɵinj = /*@__PURE__*/i0.ɵɵdefineInjector({\n  providers: [{\n    provide: HTTP_INTERCEPTORS,\n    useClass: AuthenticationInterceptor,\n    multi: true\n  }],\n  imports: [BrowserModule.withServerTransition({\n    appId: 'ng-cli-universal'\n  }), HttpClientModule, DialogComponent, ReactiveFormsModule, RouterModule.forRoot([{\n    path: '',\n    component: HomeComponent,\n    pathMatch: 'full'\n  }, {\n    path: 'counter',\n    component: CounterComponent,\n    canActivate: [canActivate]\n  }, {\n    path: 'servers',\n    component: ServersComponent,\n    canActivate: [canActivate]\n  }, {\n    path: 'servers/:id',\n    component: ServersComponent,\n    canActivate: [canActivate]\n  }, {\n    path: 'fetch-data',\n    component: FetchDataComponent,\n    canActivate: [canActivate]\n  }, {\n    path: 'login',\n    component: LoginComponent\n  }])]\n});\n(function () {\n  (typeof ngJitMode === \"undefined\" || ngJitMode) && i0.ɵɵsetNgModuleScope(AppModule, {\n    declarations: [AppComponent, NavMenuComponent, HomeComponent, CounterComponent, FetchDataComponent, LoginComponent, InitialModalComponent, ServersComponent, NavigationSidebarComponent],\n    imports: [i1.BrowserModule, HttpClientModule, DialogComponent, ReactiveFormsModule, i2.RouterModule]\n  });\n})();","map":{"version":3,"mappings":"AAAA,SAASA,aAAa,QAAQ,2BAA2B;AACzD,SAA+BC,MAAM,QAAQ,eAAe;AAC5D,SAASC,mBAAmB,QAAQ,gBAAgB;AACpD,SAASC,iBAAiB,EAAEC,gBAAgB,QAAQ,sBAAsB;AAC1E,SAA6DC,MAAM,EAAEC,YAAY,QAA6B,iBAAiB;AAE/H,SAASC,YAAY,QAAQ,iBAAiB;AAC9C,SAASC,gBAAgB,QAAQ,+BAA+B;AAChE,SAASC,aAAa,QAAQ,uBAAuB;AACrD,SAASC,gBAAgB,QAAQ,6BAA6B;AAC9D,SAASC,kBAAkB,QAAQ,mCAAmC;AACtE,SAASC,cAAc,QAAQ,yBAAyB;AACxD,SAASC,yBAAyB,QAAQ,eAAe;AACzD,SAASC,cAAc,QAAQ,2BAA2B;AAC1D,SAASC,eAAe,QAAQ,2BAA2B;AAC3D,SAASC,qBAAqB,QAAQ,yCAAyC;AAC/E,SAASC,gBAAgB,QAAQ,6BAA6B;AAC9D,SAASC,0BAA0B,QAAQ,mDAAmD;;;;AAE9F,OAAO,MAAMC,WAAW,GAAkB,CACxCC,KAA6B,EAC7BC,KAA0B,KACvB;EACH,MAAMC,cAAc,GAAGrB,MAAM,CAACa,cAAc,CAAC;EAC7C,MAAMS,MAAM,GAAGtB,MAAM,CAACI,MAAM,CAAC;EAE7B,IAAI,CAACiB,cAAc,CAACE,UAAU,EAAE,EAAE;IAChCD,MAAM,CAACE,QAAQ,CAAC,CAAC,OAAO,CAAC,CAAC;IAC1B,OAAO,KAAK;;EAGd,OAAO,IAAI;AACZ,CAAC;AAmCF,OAAM,MAAOC,SAAS;AAATA,SAAS;mBAATA,SAAS;AAAA;AAATA,SAAS;QAATA,SAAS;EAAAC,YAFRpB,YAAY;AAAA;AAEbmB,SAAS;aAPT,CAAC;IACVE,OAAO,EAAEzB,iBAAiB;IAC1B0B,QAAQ,EAAEhB,yBAAyB;IACnCiB,KAAK,EAAE;GACR,CAAC;EAAAC,UAjBA/B,aAAa,CAACgC,oBAAoB,CAAC;IAAEC,KAAK,EAAE;EAAkB,CAAE,CAAC,EACjE7B,gBAAgB,EAChBW,eAAe,EACfb,mBAAmB,EACnBI,YAAY,CAAC4B,OAAO,CAAC,CACnB;IAAEC,IAAI,EAAE,EAAE;IAAEC,SAAS,EAAE3B,aAAa;IAAE4B,SAAS,EAAE;EAAM,CAAE,EACzD;IAAEF,IAAI,EAAE,SAAS;IAAEC,SAAS,EAAE1B,gBAAgB;IAAES,WAAW,EAAE,CAACA,WAAW;EAAC,CAAC,EAC3E;IAAEgB,IAAI,EAAE,SAAS;IAAEC,SAAS,EAAEnB,gBAAgB;IAAEE,WAAW,EAAE,CAACA,WAAW;EAAC,CAAC,EAC3E;IAAEgB,IAAI,EAAE,aAAa;IAAEC,SAAS,EAAEnB,gBAAgB;IAAEE,WAAW,EAAE,CAACA,WAAW;EAAC,CAAC,EAC/E;IAAEgB,IAAI,EAAE,YAAY;IAAEC,SAAS,EAAEzB,kBAAkB;IAAEQ,WAAW,EAAE,CAACA,WAAW;EAAC,CAAC,EAChF;IAAEgB,IAAI,EAAE,OAAO;IAAEC,SAAS,EAAExB;EAAc,CAAE,CAC7C,CAAC;AAAA;;2EASOc,SAAS;IAAAY,eA/BlB/B,YAAY,EACZC,gBAAgB,EAChBC,aAAa,EACbC,gBAAgB,EAChBC,kBAAkB,EAClBC,cAAc,EACdI,qBAAqB,EACrBC,gBAAgB,EAChBC,0BAA0B;IAAAa,4BAI1B3B,gBAAgB,EAChBW,eAAe,EACfb,mBAAmB;EAAA;AAAA","names":["BrowserModule","inject","ReactiveFormsModule","HTTP_INTERCEPTORS","HttpClientModule","Router","RouterModule","AppComponent","NavMenuComponent","HomeComponent","CounterComponent","FetchDataComponent","LoginComponent","AuthenticationInterceptor","StorageService","DialogComponent","InitialModalComponent","ServersComponent","NavigationSidebarComponent","canActivate","route","state","storageService","router","isLoggedIn","navigate","AppModule","bootstrap","provide","useClass","multi","imports","withServerTransition","appId","forRoot","path","component","pathMatch","declarations"],"sourceRoot":"","sources":["C:\\Users\\anndr\\source\\repos\\DiscordAngualar2\\ClientApp\\src\\app\\app.module.ts"],"sourcesContent":["import { BrowserModule } from '@angular/platform-browser';\r\nimport { Injectable, NgModule, inject } from '@angular/core';\r\nimport { ReactiveFormsModule } from '@angular/forms';\r\nimport { HTTP_INTERCEPTORS, HttpClientModule } from '@angular/common/http';\r\nimport { ActivatedRouteSnapshot, CanActivate, CanActivateFn, Router, RouterModule, RouterStateSnapshot } from '@angular/router';\r\n\r\nimport { AppComponent } from './app.component';\r\nimport { NavMenuComponent } from './nav-menu/nav-menu.component';\r\nimport { HomeComponent } from './home/home.component';\r\nimport { CounterComponent } from './counter/counter.component';\r\nimport { FetchDataComponent } from './fetch-data/fetch-data.component';\r\nimport { LoginComponent } from './login/login.component';\r\nimport { AuthenticationInterceptor } from './interceptor';\r\nimport { StorageService } from './storage-service.service';\r\nimport { DialogComponent } from './dialog/dialog.component';\r\nimport { InitialModalComponent } from './initial-modal/initial-modal.component';\r\nimport { ServersComponent } from './servers/servers.component';\r\nimport { NavigationSidebarComponent } from './navigation-sidebar/navigation-sidebar.component';\r\n\r\nexport const canActivate: CanActivateFn = (\r\n  route: ActivatedRouteSnapshot,\r\n  state: RouterStateSnapshot\r\n ) => {\r\n  const storageService = inject(StorageService);\r\n  const router = inject(Router);\r\n \r\n  if (!storageService.isLoggedIn()) {\r\n    router.navigate(['login']);\r\n    return false;\r\n  }\r\n\r\n  return true;\r\n };\r\n\r\n@NgModule({\r\n  declarations: [\r\n    AppComponent,\r\n    NavMenuComponent,\r\n    HomeComponent,\r\n    CounterComponent,\r\n    FetchDataComponent,\r\n    LoginComponent,\r\n    InitialModalComponent,\r\n    ServersComponent,\r\n    NavigationSidebarComponent,\r\n  ],\r\n  imports: [\r\n    BrowserModule.withServerTransition({ appId: 'ng-cli-universal' }),\r\n    HttpClientModule,\r\n    DialogComponent,\r\n    ReactiveFormsModule,\r\n    RouterModule.forRoot([\r\n      { path: '', component: HomeComponent, pathMatch: 'full' },\r\n      { path: 'counter', component: CounterComponent, canActivate: [canActivate]},\r\n      { path: 'servers', component: ServersComponent, canActivate: [canActivate]},\r\n      { path: 'servers/:id', component: ServersComponent, canActivate: [canActivate]},\r\n      { path: 'fetch-data', component: FetchDataComponent, canActivate: [canActivate]},\r\n      { path: 'login', component: LoginComponent },\r\n    ])\r\n  ],\r\n  providers: [{\r\n    provide: HTTP_INTERCEPTORS,\r\n    useClass: AuthenticationInterceptor,\r\n    multi: true\r\n  }],\r\n  bootstrap: [AppComponent]\r\n})\r\nexport class AppModule { }\r\n"]},"metadata":{},"sourceType":"module","externalDependencies":[]}