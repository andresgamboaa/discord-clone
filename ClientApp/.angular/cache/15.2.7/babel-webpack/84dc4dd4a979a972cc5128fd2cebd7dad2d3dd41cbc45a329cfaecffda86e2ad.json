{"ast":null,"code":"import * as i0 from \"@angular/core\";\nimport * as i1 from \"@angular/common\";\nfunction ServerSidebarComponent_a_1_Template(rf, ctx) {\n  if (rf & 1) {\n    i0.ɵɵelementStart(0, \"a\", 2);\n    i0.ɵɵtext(1);\n    i0.ɵɵelementEnd();\n  }\n  if (rf & 2) {\n    const channel_r1 = ctx.$implicit;\n    i0.ɵɵadvance(1);\n    i0.ɵɵtextInterpolate1(\"# \", channel_r1.name, \"\");\n  }\n}\nexport class ServerSidebarComponent {\n  ngOnChanges(changes) {\n    if (changes.server && this.server) {\n      console.log(this.groupBy(this.server.channels, c => c.type));\n    }\n  }\n  groupBy(list, keyGetter) {\n    const map = new Map();\n    list.forEach(item => {\n      const key = keyGetter(item);\n      const collection = map.get(key);\n      if (!collection) {\n        map.set(key, [item]);\n      } else {\n        collection.push(item);\n      }\n    });\n    return map;\n  }\n}\nServerSidebarComponent.ɵfac = function ServerSidebarComponent_Factory(t) {\n  return new (t || ServerSidebarComponent)();\n};\nServerSidebarComponent.ɵcmp = /*@__PURE__*/i0.ɵɵdefineComponent({\n  type: ServerSidebarComponent,\n  selectors: [[\"app-server-sidebar\"]],\n  inputs: {\n    server: \"server\"\n  },\n  features: [i0.ɵɵNgOnChangesFeature],\n  decls: 2,\n  vars: 1,\n  consts: [[1, \"flex\", \"flex-col\", \"h-full\", \"w-[200px]\", \"bg-gray-900\", \"text-white\", \"p-2\"], [\"class\", \"bg-gray-800 hover:bg-gray-700 cursor-pointer p-2 pt-1 text-white rounded-md\", 4, \"ngFor\", \"ngForOf\"], [1, \"bg-gray-800\", \"hover:bg-gray-700\", \"cursor-pointer\", \"p-2\", \"pt-1\", \"text-white\", \"rounded-md\"]],\n  template: function ServerSidebarComponent_Template(rf, ctx) {\n    if (rf & 1) {\n      i0.ɵɵelementStart(0, \"div\", 0);\n      i0.ɵɵtemplate(1, ServerSidebarComponent_a_1_Template, 2, 1, \"a\", 1);\n      i0.ɵɵelementEnd();\n    }\n    if (rf & 2) {\n      i0.ɵɵadvance(1);\n      i0.ɵɵproperty(\"ngForOf\", ctx.server == null ? null : ctx.server.channels);\n    }\n  },\n  dependencies: [i1.NgForOf],\n  styles: [\"\\n/*# sourceMappingURL=data:application/json;charset=utf-8;base64,eyJ2ZXJzaW9uIjozLCJzb3VyY2VzIjpbXSwibmFtZXMiOltdLCJtYXBwaW5ncyI6IiIsInNvdXJjZVJvb3QiOiIifQ== */\"]\n});","map":{"version":3,"mappings":";;;;IACIA,4BAEC;IAAAA,YAAkB;IAAAA,iBAAI;;;;IAAtBA,eAAkB;IAAlBA,gDAAkB;;;ACKvB,OAAM,MAAOC,sBAAsB;EAGjCC,WAAW,CAACC,OAAsB;IAChC,IAAIA,OAAO,CAACC,MAAM,IAAI,IAAI,CAACA,MAAM,EAAE;MACjCC,OAAO,CAACC,GAAG,CAAC,IAAI,CAACC,OAAO,CAAC,IAAI,CAACH,MAAM,CAACI,QAAQ,EAAGC,CAAC,IAAKA,CAAC,CAACC,IAAI,CAAC,CAAC;;EAElE;EAEAH,OAAO,CAAII,IAAS,EAAEC,SAA0B;IAC/C,MAAMC,GAAG,GAAG,IAAIC,GAAG,EAAE;IACrBH,IAAI,CAACI,OAAO,CAAEC,IAAI,IAAI;MACjB,MAAMC,GAAG,GAAGL,SAAS,CAACI,IAAI,CAAC;MAC3B,MAAME,UAAU,GAAGL,GAAG,CAACM,GAAG,CAACF,GAAG,CAAC;MAC/B,IAAI,CAACC,UAAU,EAAE;QACbL,GAAG,CAACO,GAAG,CAACH,GAAG,EAAE,CAACD,IAAI,CAAC,CAAC;OACvB,MAAM;QACHE,UAAU,CAACG,IAAI,CAACL,IAAI,CAAC;;IAE9B,CAAC,CAAC;IACF,OAAOH,GAAG;EACb;;AArBaZ,sBAAsB;mBAAtBA,sBAAsB;AAAA;AAAtBA,sBAAsB;QAAtBA,sBAAsB;EAAAqB;EAAAC;IAAAnB;EAAA;EAAAoB;EAAAC;EAAAC;EAAAC;EAAAC;IAAA;MDRnC5B,8BAAuE;MACnEA,mEAEuB;MAC3BA,iBAAM;;;MAHqBA,eAAmB;MAAnBA,yEAAmB","names":["i0","ServerSidebarComponent","ngOnChanges","changes","server","console","log","groupBy","channels","c","type","list","keyGetter","map","Map","forEach","item","key","collection","get","set","push","selectors","inputs","features","decls","vars","consts","template"],"sourceRoot":"","sources":["C:\\Users\\anndr\\source\\repos\\DiscordAngualar2\\ClientApp\\src\\app\\server-sidebar\\server-sidebar.component.html","C:\\Users\\anndr\\source\\repos\\DiscordAngualar2\\ClientApp\\src\\app\\server-sidebar\\server-sidebar.component.ts"],"sourcesContent":["<div class=\"flex flex-col h-full w-[200px] bg-gray-900 text-white p-2\">\n    <a *ngFor=\"let channel of server?.channels\"\n        class=\"bg-gray-800 hover:bg-gray-700 cursor-pointer p-2 pt-1 text-white rounded-md\"\n    ># {{channel.name}}</a>\n</div>","import { Component, Input, OnChanges, SimpleChanges } from '@angular/core';\nimport { Server } from '../models/server';\n\n@Component({\n  selector: 'app-server-sidebar',\n  templateUrl: './server-sidebar.component.html',\n  styleUrls: ['./server-sidebar.component.css']\n})\nexport class ServerSidebarComponent implements OnChanges {\n  @Input() server?: Server;\n  \n  ngOnChanges(changes: SimpleChanges): void {\n    if (changes.server && this.server) {\n      console.log(this.groupBy(this.server.channels, (c) => c.type));\n    }\n  }\n\n  groupBy<T>(list: T[], keyGetter: (item:T) => any) {\n   const map = new Map();\n   list.forEach((item) => {\n        const key = keyGetter(item);\n        const collection = map.get(key);\n        if (!collection) {\n            map.set(key, [item]);\n        } else {\n            collection.push(item);\n        }\n   });\n   return map;\n}\n}\n"]},"metadata":{},"sourceType":"module","externalDependencies":[]}