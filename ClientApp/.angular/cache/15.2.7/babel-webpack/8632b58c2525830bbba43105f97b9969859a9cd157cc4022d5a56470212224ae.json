{"ast":null,"code":"import { ChannelType } from '../models/channel';\nimport * as i0 from \"@angular/core\";\nimport * as i1 from \"@angular/common\";\nfunction ServerSidebarComponent_a_1_Template(rf, ctx) {\n  if (rf & 1) {\n    i0.ɵɵelementStart(0, \"a\", 2);\n    i0.ɵɵtext(1);\n    i0.ɵɵelementEnd();\n  }\n  if (rf & 2) {\n    const channel_r1 = ctx.$implicit;\n    i0.ɵɵadvance(1);\n    i0.ɵɵtextInterpolate1(\"# \", channel_r1.name, \"\");\n  }\n}\nexport class ServerSidebarComponent {\n  ngOnChanges(changes) {\n    if (changes.server && this.server) {\n      this.channelsTypes = this.groupChannelsByType(this.server.channels);\n      console.log(this.channelsTypes);\n    }\n  }\n  groupChannelsByType(channels) {\n    let output = new Map();\n    output.set(ChannelType.Audio, []);\n    output.set(ChannelType.Text, []);\n    output.set(ChannelType.Video, []);\n    for (let channel of channels) {\n      output.get(channel.type)?.push(channel);\n    }\n    return output;\n  }\n}\nServerSidebarComponent.ɵfac = function ServerSidebarComponent_Factory(t) {\n  return new (t || ServerSidebarComponent)();\n};\nServerSidebarComponent.ɵcmp = /*@__PURE__*/i0.ɵɵdefineComponent({\n  type: ServerSidebarComponent,\n  selectors: [[\"app-server-sidebar\"]],\n  inputs: {\n    server: \"server\"\n  },\n  features: [i0.ɵɵNgOnChangesFeature],\n  decls: 2,\n  vars: 1,\n  consts: [[1, \"flex\", \"flex-col\", \"h-full\", \"w-[200px]\", \"bg-gray-900\", \"text-white\", \"p-2\"], [\"class\", \"bg-gray-800 hover:bg-gray-700 cursor-pointer p-2 pt-1 text-white rounded-md\", 4, \"ngFor\", \"ngForOf\"], [1, \"bg-gray-800\", \"hover:bg-gray-700\", \"cursor-pointer\", \"p-2\", \"pt-1\", \"text-white\", \"rounded-md\"]],\n  template: function ServerSidebarComponent_Template(rf, ctx) {\n    if (rf & 1) {\n      i0.ɵɵelementStart(0, \"div\", 0);\n      i0.ɵɵtemplate(1, ServerSidebarComponent_a_1_Template, 2, 1, \"a\", 1);\n      i0.ɵɵelementEnd();\n    }\n    if (rf & 2) {\n      i0.ɵɵadvance(1);\n      i0.ɵɵproperty(\"ngForOf\", ctx.server == null ? null : ctx.server.channels);\n    }\n  },\n  dependencies: [i1.NgForOf],\n  styles: [\"\\n/*# sourceMappingURL=data:application/json;charset=utf-8;base64,eyJ2ZXJzaW9uIjozLCJzb3VyY2VzIjpbXSwibmFtZXMiOltdLCJtYXBwaW5ncyI6IiIsInNvdXJjZVJvb3QiOiIifQ== */\"]\n});","map":{"version":3,"mappings":"AAEA,SAAkBA,WAAW,QAAQ,mBAAmB;;;;;ICDpDC,4BAEC;IAAAA,YAAkB;IAAAA,iBAAI;;;;IAAtBA,eAAkB;IAAlBA,gDAAkB;;;ADMvB,OAAM,MAAOC,sBAAsB;EAIjCC,WAAW,CAACC,OAAsB;IAChC,IAAIA,OAAO,CAACC,MAAM,IAAI,IAAI,CAACA,MAAM,EAAE;MACjC,IAAI,CAACC,aAAa,GAAG,IAAI,CAACC,mBAAmB,CAAC,IAAI,CAACF,MAAM,CAACG,QAAQ,CAAC;MACnEC,OAAO,CAACC,GAAG,CAAC,IAAI,CAACJ,aAAa,CAAC;;EAEnC;EAEAC,mBAAmB,CAAIC,QAAmB;IACxC,IAAIG,MAAM,GAAG,IAAIC,GAAG,EAA0B;IAC9CD,MAAM,CAACE,GAAG,CAACb,WAAW,CAACc,KAAK,EAAE,EAAE,CAAC;IACjCH,MAAM,CAACE,GAAG,CAACb,WAAW,CAACe,IAAI,EAAE,EAAE,CAAC;IAChCJ,MAAM,CAACE,GAAG,CAACb,WAAW,CAACgB,KAAK,EAAE,EAAE,CAAC;IAEjC,KAAK,IAAIC,OAAO,IAAIT,QAAQ,EAAE;MAC5BG,MAAM,CAACO,GAAG,CAACD,OAAO,CAACE,IAAI,CAAC,EAAEC,IAAI,CAACH,OAAO,CAAC;;IAGzC,OAAON,MAAM;EACf;;AAtBWT,sBAAsB;mBAAtBA,sBAAsB;AAAA;AAAtBA,sBAAsB;QAAtBA,sBAAsB;EAAAmB;EAAAC;IAAAjB;EAAA;EAAAkB;EAAAC;EAAAC;EAAAC;EAAAC;IAAA;MCTnC1B,8BAAuE;MACnEA,mEAEuB;MAC3BA,iBAAM;;;MAHqBA,eAAmB;MAAnBA,yEAAmB","names":["ChannelType","i0","ServerSidebarComponent","ngOnChanges","changes","server","channelsTypes","groupChannelsByType","channels","console","log","output","Map","set","Audio","Text","Video","channel","get","type","push","selectors","inputs","features","decls","vars","consts","template"],"sourceRoot":"","sources":["C:\\Users\\anndr\\source\\repos\\DiscordAngualar2\\ClientApp\\src\\app\\server-sidebar\\server-sidebar.component.ts","C:\\Users\\anndr\\source\\repos\\DiscordAngualar2\\ClientApp\\src\\app\\server-sidebar\\server-sidebar.component.html"],"sourcesContent":["import { Component, Input, OnChanges, SimpleChanges } from '@angular/core';\nimport { Server } from '../models/server';\nimport { Channel, ChannelType } from '../models/channel';\n\n@Component({\n  selector: 'app-server-sidebar',\n  templateUrl: './server-sidebar.component.html',\n  styleUrls: ['./server-sidebar.component.css']\n})\nexport class ServerSidebarComponent implements OnChanges {\n  @Input() server?: Server;\n  channelsTypes?: Map<ChannelType, Channel[]>;\n  \n  ngOnChanges(changes: SimpleChanges): void {\n    if (changes.server && this.server) {\n      this.channelsTypes = this.groupChannelsByType(this.server.channels);\n      console.log(this.channelsTypes);\n    }\n  }\n\n  groupChannelsByType<T>(channels: Channel[]) {\n    let output = new Map<ChannelType, Channel[]>();\n    output.set(ChannelType.Audio, []);\n    output.set(ChannelType.Text, []);\n    output.set(ChannelType.Video, []);\n\n    for (let channel of channels) {\n      output.get(channel.type)?.push(channel);\n    }\n\n    return output;\n  }\n}\n","<div class=\"flex flex-col h-full w-[200px] bg-gray-900 text-white p-2\">\n    <a *ngFor=\"let channel of server?.channels\"\n        class=\"bg-gray-800 hover:bg-gray-700 cursor-pointer p-2 pt-1 text-white rounded-md\"\n    ># {{channel.name}}</a>\n</div>"]},"metadata":{},"sourceType":"module","externalDependencies":[]}