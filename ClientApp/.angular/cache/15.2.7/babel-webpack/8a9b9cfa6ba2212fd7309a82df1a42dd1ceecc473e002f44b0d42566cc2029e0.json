{"ast":null,"code":"import { __decorate } from \"tslib\";\nimport { Component, Input } from '@angular/core';\nlet ServerSidebarComponent = class ServerSidebarComponent {\n  ngOnChanges(changes) {\n    if (changes.server && this.server) {\n      this.channelsByType = this.groupChannelsByType(this.server.channels);\n    }\n  }\n  groupChannelsByType(channels) {\n    let output = new Map();\n    let types = [\"Text\", \"Audio\", \"Video\"];\n    output.set(types[0], []);\n    output.set(types[1], []);\n    output.set(types[2], []);\n    for (let channel of channels) {\n      output.get(types[channel.type])?.push(channel);\n    }\n    return output;\n  }\n};\n__decorate([Input()], ServerSidebarComponent.prototype, \"server\", void 0);\nServerSidebarComponent = __decorate([Component({\n  selector: 'app-server-sidebar',\n  templateUrl: './server-sidebar.component.html',\n  styleUrls: ['./server-sidebar.component.css']\n})], ServerSidebarComponent);\nexport { ServerSidebarComponent };","map":{"version":3,"mappings":";AAAA,SAASA,SAAS,EAAEC,KAAK,QAAkC,eAAe;AASnE,IAAMC,sBAAsB,GAA5B,MAAMA,sBAAsB;EAIjCC,WAAW,CAACC,OAAsB;IAChC,IAAIA,OAAO,CAACC,MAAM,IAAI,IAAI,CAACA,MAAM,EAAE;MACjC,IAAI,CAACC,cAAc,GAAG,IAAI,CAACC,mBAAmB,CAAC,IAAI,CAACF,MAAM,CAACG,QAAQ,CAAC;;EAExE;EAEAD,mBAAmB,CAAIC,QAAmB;IACxC,IAAIC,MAAM,GAAG,IAAIC,GAAG,EAAqB;IACzC,IAAIC,KAAK,GAAG,CAAC,MAAM,EAAE,OAAO,EAAE,OAAO,CAAU;IAE/CF,MAAM,CAACG,GAAG,CAACD,KAAK,CAAC,CAAC,CAAC,EAAE,EAAE,CAAC;IACxBF,MAAM,CAACG,GAAG,CAACD,KAAK,CAAC,CAAC,CAAC,EAAE,EAAE,CAAC;IACxBF,MAAM,CAACG,GAAG,CAACD,KAAK,CAAC,CAAC,CAAC,EAAE,EAAE,CAAC;IAExB,KAAK,IAAIE,OAAO,IAAIL,QAAQ,EAAE;MAC5BC,MAAM,CAACK,GAAG,CAACH,KAAK,CAACE,OAAO,CAACE,IAAI,CAAC,CAAC,EAAEC,IAAI,CAACH,OAAO,CAAC;;IAGhD,OAAOJ,MAAM;EACf;CACD;AAvBUQ,YAARhB,KAAK,EAAE,sDAAiB;AADdC,sBAAsB,eALlCF,SAAS,CAAC;EACTkB,QAAQ,EAAE,oBAAoB;EAC9BC,WAAW,EAAE,iCAAiC;EAC9CC,SAAS,EAAE,CAAC,gCAAgC;CAC7C,CAAC,GACWlB,sBAAsB,CAwBlC;SAxBYA,sBAAsB","names":["Component","Input","ServerSidebarComponent","ngOnChanges","changes","server","channelsByType","groupChannelsByType","channels","output","Map","types","set","channel","get","type","push","__decorate","selector","templateUrl","styleUrls"],"sourceRoot":"","sources":["C:\\Users\\anndr\\source\\repos\\DiscordAngualar2\\ClientApp\\src\\app\\server-sidebar\\server-sidebar.component.ts"],"sourcesContent":["import { Component, Input, OnChanges, SimpleChanges } from '@angular/core';\nimport { Server } from '../models/server';\nimport { Channel, ChannelType } from '../models/channel';\n\n@Component({\n  selector: 'app-server-sidebar',\n  templateUrl: './server-sidebar.component.html',\n  styleUrls: ['./server-sidebar.component.css']\n})\nexport class ServerSidebarComponent implements OnChanges {\n  @Input() server?: Server;\n  channelsByType?: Map<string, Channel[]>;\n  \n  ngOnChanges(changes: SimpleChanges): void {\n    if (changes.server && this.server) {\n      this.channelsByType = this.groupChannelsByType(this.server.channels);\n    }\n  }\n\n  groupChannelsByType<T>(channels: Channel[]) {\n    let output = new Map<string, Channel[]>();\n    let types = [\"Text\", \"Audio\", \"Video\"] as const;\n\n    output.set(types[0], []);\n    output.set(types[1], []);\n    output.set(types[2], []);\n\n    for (let channel of channels) {\n      output.get(types[channel.type])?.push(channel);\n    }\n\n    return output;\n  }\n}\n"]},"metadata":{},"sourceType":"module","externalDependencies":[]}