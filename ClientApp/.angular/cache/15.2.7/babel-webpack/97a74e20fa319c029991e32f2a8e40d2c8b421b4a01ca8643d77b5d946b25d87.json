{"ast":null,"code":"import * as i0 from \"@angular/core\";\nimport * as i1 from \"../servers.service\";\nimport * as i2 from \"@angular/router\";\nimport * as i3 from \"@angular/common\";\nfunction ServersComponent_p_2_Template(rf, ctx) {\n  if (rf & 1) {\n    i0.ɵɵelementStart(0, \"p\");\n    i0.ɵɵtext(1);\n    i0.ɵɵelementEnd();\n  }\n  if (rf & 2) {\n    const server_r2 = ctx.$implicit;\n    i0.ɵɵadvance(1);\n    i0.ɵɵtextInterpolate(server_r2.name);\n  }\n}\nfunction ServersComponent_h1_3_Template(rf, ctx) {\n  if (rf & 1) {\n    i0.ɵɵelementStart(0, \"h1\");\n    i0.ɵɵtext(1, \"There is an Id in the url\");\n    i0.ɵɵelementEnd();\n  }\n}\nexport class ServersComponent {\n  constructor(serversService, router, route) {\n    this.serversService = serversService;\n    this.router = router;\n    this.route = route;\n    this.servers = [];\n    this.withId = false;\n  }\n  ngOnInit() {\n    this.serversService.getServers().subscribe(data => {\n      this.servers = data;\n      // Redirect to the first server if the user has any.\n      if (this.servers.length > 0) {\n        this.router.navigate([\"servers/\", this.servers[0].id]);\n      }\n    });\n    this.route.paramMap.subscribe(params => {\n      let id = params.get('id');\n      if (id) this.withId = true;\n    });\n  }\n}\nServersComponent.ɵfac = function ServersComponent_Factory(t) {\n  return new (t || ServersComponent)(i0.ɵɵdirectiveInject(i1.ServersService), i0.ɵɵdirectiveInject(i2.Router), i0.ɵɵdirectiveInject(i2.ActivatedRoute));\n};\nServersComponent.ɵcmp = /*@__PURE__*/i0.ɵɵdefineComponent({\n  type: ServersComponent,\n  selectors: [[\"app-servers\"]],\n  decls: 4,\n  vars: 2,\n  consts: [[1, \"w-full\", \"h-screen\", \"overflow-hidden\", \"flex\"], [4, \"ngFor\", \"ngForOf\"], [4, \"ngIf\"]],\n  template: function ServersComponent_Template(rf, ctx) {\n    if (rf & 1) {\n      i0.ɵɵelementStart(0, \"div\", 0)(1, \"div\");\n      i0.ɵɵtemplate(2, ServersComponent_p_2_Template, 2, 1, \"p\", 1);\n      i0.ɵɵelementEnd();\n      i0.ɵɵtemplate(3, ServersComponent_h1_3_Template, 2, 0, \"h1\", 2);\n      i0.ɵɵelementEnd();\n    }\n    if (rf & 2) {\n      i0.ɵɵadvance(2);\n      i0.ɵɵproperty(\"ngForOf\", ctx.servers);\n      i0.ɵɵadvance(1);\n      i0.ɵɵproperty(\"ngIf\", ctx.withId);\n    }\n  },\n  dependencies: [i3.NgForOf, i3.NgIf],\n  styles: [\"\\n/*# sourceMappingURL=data:application/json;charset=utf-8;base64,eyJ2ZXJzaW9uIjozLCJzb3VyY2VzIjpbXSwibmFtZXMiOltdLCJtYXBwaW5ncyI6IiIsInNvdXJjZVJvb3QiOiIifQ== */\"]\n});","map":{"version":3,"mappings":";;;;;;IAEQA,yBAAkC;IAAAA,YAAe;IAAAA,iBAAI;;;;IAAnBA,eAAe;IAAfA,oCAAe;;;;;IAErDA,0BAAmB;IAAAA,yCAAyB;IAAAA,iBAAK;;;ACQrD,OAAM,MAAOC,gBAAgB;EAK3BC,YACUC,cAA8B,EAC9BC,MAAc,EACfC,KAAqB;IAFpB,mBAAc,GAAdF,cAAc;IACd,WAAM,GAANC,MAAM;IACP,UAAK,GAALC,KAAK;IAPd,YAAO,GAAmB,EAAE;IAE5B,WAAM,GAAG,KAAK;EAMX;EAEHC,QAAQ;IACN,IAAI,CAACH,cAAc,CAACI,UAAU,EAAE,CAACC,SAAS,CAAEC,IAAI,IAAI;MAClD,IAAI,CAACC,OAAO,GAAGD,IAAI;MACnB;MACA,IAAI,IAAI,CAACC,OAAO,CAACC,MAAM,GAAG,CAAC,EAAE;QAC3B,IAAI,CAACP,MAAM,CAACQ,QAAQ,CAAC,CAAC,UAAU,EAAE,IAAI,CAACF,OAAO,CAAC,CAAC,CAAC,CAACG,EAAE,CAAC,CAAC;;IAE1D,CAAC,CAAC;IAEF,IAAI,CAACR,KAAK,CAACS,QAAQ,CAACN,SAAS,CAACO,MAAM,IAAG;MACrC,IAAIF,EAAE,GAAGE,MAAM,CAACC,GAAG,CAAC,IAAI,CAAC;MACzB,IAAIH,EAAE,EAAE,IAAI,CAACI,MAAM,GAAG,IAAI;IAC5B,CAAC,CAAC;EACJ;;AAxBWhB,gBAAgB;mBAAhBA,gBAAgB;AAAA;AAAhBA,gBAAgB;QAAhBA,gBAAgB;EAAAiB;EAAAC;EAAAC;EAAAC;EAAAC;IAAA;MDZ7BtB,8BAAkD;MAE1CA,6DAAqD;MACzDA,iBAAM;MACNA,+DAAiD;MACrDA,iBAAM;;;MAHwBA,eAAU;MAAVA,qCAAU;MAE/BA,eAAY;MAAZA,iCAAY","names":["i0","ServersComponent","constructor","serversService","router","route","ngOnInit","getServers","subscribe","data","servers","length","navigate","id","paramMap","params","get","withId","selectors","decls","vars","consts","template"],"sourceRoot":"","sources":["C:\\Users\\anndr\\source\\repos\\DiscordAngualar2\\ClientApp\\src\\app\\servers\\servers.component.html","C:\\Users\\anndr\\source\\repos\\DiscordAngualar2\\ClientApp\\src\\app\\servers\\servers.component.ts"],"sourcesContent":["<div class=\"w-full h-screen overflow-hidden flex\">\n    <div>\n        <p *ngFor=\"let server of servers\">{{server.name}}</p>\n    </div>\n    <h1 *ngIf=\"withId\">There is an Id in the url</h1>\n</div>","import { Component, OnInit } from '@angular/core';\nimport { ServersService } from '../servers.service';\nimport { ServerSimple } from '../models/server';\nimport { AuthService } from '../auth-service.service';\nimport { StorageService } from '../storage-service.service';\nimport { ActivatedRoute, Router } from '@angular/router';\n\n@Component({\n  selector: 'app-servers',\n  templateUrl: './servers.component.html',\n  styleUrls: ['./servers.component.css']\n})\nexport class ServersComponent implements OnInit {\n  servers: ServerSimple[] = [];\n  currentServer?: ServerSimple;\n  withId = false;\n\n  constructor(\n    private serversService: ServersService, \n    private router: Router,\n    public route: ActivatedRoute\n  ) {}\n\n  ngOnInit(): void {\n    this.serversService.getServers().subscribe((data) => {\n      this.servers = data;\n      // Redirect to the first server if the user has any.\n      if (this.servers.length > 0) {\n        this.router.navigate([\"servers/\", this.servers[0].id]);\n      }\n    })\n\n    this.route.paramMap.subscribe(params => {\n      let id = params.get('id');\n      if (id) this.withId = true;\n    });\n  }\n}\n"]},"metadata":{},"sourceType":"module","externalDependencies":[]}