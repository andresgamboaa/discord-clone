{"ast":null,"code":"import { CommonModule } from '@angular/common';\nimport { animate, style, transition, trigger } from '@angular/animations';\nimport * as i0 from \"@angular/core\";\nconst _c0 = [\"dialog\"];\nconst _c1 = [\"*\"];\nexport class DialogComponent {\n  constructor() {\n    this.open = false;\n  }\n  ngAfterViewInit() {\n    if (this.open) {\n      this.dialog?.nativeElement.showModal();\n    } else {\n      this.dialog?.nativeElement.close();\n    }\n  }\n  ngOnChanges(changes) {\n    if (!changes['open']) return;\n    if (changes.open.currentValue) {\n      this.dialog?.nativeElement.showModal();\n    } else {\n      this.dialog?.nativeElement.close();\n    }\n  }\n}\nDialogComponent.ɵfac = function DialogComponent_Factory(t) {\n  return new (t || DialogComponent)();\n};\nDialogComponent.ɵcmp = /*@__PURE__*/i0.ɵɵdefineComponent({\n  type: DialogComponent,\n  selectors: [[\"app-dialog\"]],\n  viewQuery: function DialogComponent_Query(rf, ctx) {\n    if (rf & 1) {\n      i0.ɵɵviewQuery(_c0, 5);\n    }\n    if (rf & 2) {\n      let _t;\n      i0.ɵɵqueryRefresh(_t = i0.ɵɵloadQuery()) && (ctx.dialog = _t.first);\n    }\n  },\n  inputs: {\n    open: \"open\"\n  },\n  standalone: true,\n  features: [i0.ɵɵNgOnChangesFeature, i0.ɵɵStandaloneFeature],\n  ngContentSelectors: _c1,\n  decls: 4,\n  vars: 0,\n  consts: [[1, \"w-full\", \"max-w-md\", \"bg-white\", \"rounded-md\", \"p-2\"], [\"dialog\", \"\"]],\n  template: function DialogComponent_Template(rf, ctx) {\n    if (rf & 1) {\n      i0.ɵɵprojectionDef();\n      i0.ɵɵelementStart(0, \"dialog\", 0, 1)(2, \"div\");\n      i0.ɵɵprojection(3);\n      i0.ɵɵelementEnd()();\n    }\n  },\n  dependencies: [CommonModule],\n  encapsulation: 2,\n  data: {\n    animation: [trigger('inOutAnimation', [transition(':enter', [style({\n      opacity: 0,\n      transform: 'translateY(-10px)'\n    }), animate('0.1s ease-out', style({\n      opacity: 1,\n      transform: 'translateY(0px)'\n    }))]), transition(':leave', [style({\n      opacity: 1\n    }), animate('0.08s ease-in', style({\n      opacity: 0,\n      transform: 'translateY(-5px)'\n    }))])])]\n  }\n});","map":{"version":3,"mappings":"AACA,SAASA,YAAY,QAAQ,iBAAiB;AAC9C,SAASC,OAAO,EAAEC,KAAK,EAAEC,UAAU,EAAEC,OAAO,QAAQ,qBAAqB;;;;AA+BzE,OAAM,MAAOC,eAAe;EA7B5BC;IA8BW,SAAI,GAAG,KAAK;;EAGrBC,eAAe;IACb,IAAI,IAAI,CAACC,IAAI,EAAE;MACb,IAAI,CAACC,MAAM,EAAEC,aAAa,CAACC,SAAS,EAAE;KACvC,MACI;MACH,IAAI,CAACF,MAAM,EAAEC,aAAa,CAACE,KAAK,EAAE;;EAEtC;EAEAC,WAAW,CAACC,OAAsB;IAChC,IAAI,CAACA,OAAO,CAAC,MAAM,CAAC,EAAE;IAEtB,IAAIA,OAAO,CAACN,IAAI,CAACO,YAAY,EAAE;MAC7B,IAAI,CAACN,MAAM,EAAEC,aAAa,CAACC,SAAS,EAAE;KACvC,MACI;MACH,IAAI,CAACF,MAAM,EAAEC,aAAa,CAACE,KAAK,EAAE;;EAEtC;;AAtBWP,eAAe;mBAAfA,eAAe;AAAA;AAAfA,eAAe;QAAfA,eAAe;EAAAW;EAAAC;IAAA;;;;;;;;;;;;;;;;;;;;MCjC5BC,oCAAiE;MAE7DA,kBAAa;MACfA,iBAAM;;;iBDIIlB,YAAY;EAAAmB;EAAAC;IAAAC,WAEV,CACRjB,OAAO,CACL,gBAAgB,EAChB,CACED,UAAU,CACR,QAAQ,EACR,CACED,KAAK,CAAC;MAAEoB,OAAO,EAAE,CAAC;MAAEC,SAAS,EAAE;IAAmB,CAAE,CAAC,EACrDtB,OAAO,CAAC,eAAe,EAChBC,KAAK,CAAC;MAACoB,OAAO,EAAE,CAAC;MAAEC,SAAS,EAAE;IAAiB,CAAE,CAAC,CAAC,CAC3D,CACF,EACDpB,UAAU,CACR,QAAQ,EACR,CACED,KAAK,CAAC;MAAGoB,OAAO,EAAE;IAAC,CAAE,CAAC,EACtBrB,OAAO,CAAC,eAAe,EAChBC,KAAK,CAAC;MAAEoB,OAAO,EAAE,CAAC;MAAEC,SAAS,EAAE;IAAkB,CAAE,CAAC,CAAC,CAC7D,CACF,CACF,CACF;EACF;AAAA","names":["CommonModule","animate","style","transition","trigger","DialogComponent","constructor","ngAfterViewInit","open","dialog","nativeElement","showModal","close","ngOnChanges","changes","currentValue","selectors","viewQuery","i0","encapsulation","data","animation","opacity","transform"],"sourceRoot":"","sources":["C:\\Users\\anndr\\source\\repos\\DiscordAngualar2\\ClientApp\\src\\app\\components\\dialog\\dialog.component.ts","C:\\Users\\anndr\\source\\repos\\DiscordAngualar2\\ClientApp\\src\\app\\components\\dialog\\dialog.component.html"],"sourcesContent":["import { AfterViewInit, ChangeDetectionStrategy, ChangeDetectorRef, Component, ElementRef, EventEmitter, Input, OnChanges, OnInit, Output, SimpleChanges, ViewChild, inject } from '@angular/core';\nimport { CommonModule } from '@angular/common';\nimport { animate, style, transition, trigger } from '@angular/animations';\n\n@Component({\n  selector: 'app-dialog',\n  standalone: true,\n  imports: [CommonModule],\n  templateUrl: './dialog.component.html',\n  animations: [\n      trigger(\n        'inOutAnimation', \n        [\n          transition(\n            ':enter', \n            [\n              style({ opacity: 0, transform: 'translateY(-10px)' }),\n              animate('0.1s ease-out', \n                     style({opacity: 1, transform: 'translateY(0px)' }))\n            ]\n          ),\n          transition(\n            ':leave', \n            [\n              style({  opacity: 1 }),\n              animate('0.08s ease-in', \n                     style({ opacity: 0, transform: 'translateY(-5px)' }))\n            ]\n          )\n        ]\n      )\n    ]\n})\nexport class DialogComponent implements OnChanges, AfterViewInit  {\n  @Input() open = false;\n  @ViewChild('dialog') dialog: ElementRef<HTMLDialogElement> | undefined;\n\n  ngAfterViewInit(): void {\n    if (this.open) {\n      this.dialog?.nativeElement.showModal();\n    }\n    else {\n      this.dialog?.nativeElement.close();\n    }\n  }\n\n  ngOnChanges(changes: SimpleChanges): void {\n    if (!changes['open']) return; \n\n    if (changes.open.currentValue) {\n      this.dialog?.nativeElement.showModal();\n    }\n    else {\n      this.dialog?.nativeElement.close();\n    }\n  }\n\n}","<dialog #dialog  class=\"w-full max-w-md bg-white rounded-md p-2\">\r\n  <div >\r\n    <ng-content/>\r\n  </div>\r\n</dialog>\r\n"]},"metadata":{},"sourceType":"module","externalDependencies":[]}