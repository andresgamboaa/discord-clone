{"ast":null,"code":"import * as i0 from \"@angular/core\";\nimport * as i1 from \"@angular/common\";\nfunction ServerSidebarComponent_ng_container_5_div_1_a_4_Template(rf, ctx) {\n  if (rf & 1) {\n    i0.ɵɵelementStart(0, \"a\", 9);\n    i0.ɵɵtext(1);\n    i0.ɵɵelementEnd();\n  }\n  if (rf & 2) {\n    const channel_r5 = ctx.$implicit;\n    i0.ɵɵadvance(1);\n    i0.ɵɵtextInterpolate1(\"# \", channel_r5.name, \"\");\n  }\n}\nfunction ServerSidebarComponent_ng_container_5_div_1_Template(rf, ctx) {\n  if (rf & 1) {\n    i0.ɵɵelementStart(0, \"div\", 6)(1, \"span\", 7);\n    i0.ɵɵtext(2);\n    i0.ɵɵpipe(3, \"uppercase\");\n    i0.ɵɵelementEnd();\n    i0.ɵɵtemplate(4, ServerSidebarComponent_ng_container_5_div_1_a_4_Template, 2, 1, \"a\", 8);\n    i0.ɵɵelementEnd();\n  }\n  if (rf & 2) {\n    const type_r2 = i0.ɵɵnextContext().$implicit;\n    const ctx_r3 = i0.ɵɵnextContext();\n    i0.ɵɵadvance(2);\n    i0.ɵɵtextInterpolate1(\"\", i0.ɵɵpipeBind1(3, 2, type_r2), \" CHANNELS\");\n    i0.ɵɵadvance(2);\n    i0.ɵɵproperty(\"ngForOf\", ctx_r3.channelsByType == null ? null : ctx_r3.channelsByType.get(type_r2));\n  }\n}\nfunction ServerSidebarComponent_ng_container_5_Template(rf, ctx) {\n  if (rf & 1) {\n    i0.ɵɵelementContainerStart(0);\n    i0.ɵɵtemplate(1, ServerSidebarComponent_ng_container_5_div_1_Template, 5, 4, \"div\", 5);\n    i0.ɵɵelementContainerEnd();\n  }\n  if (rf & 2) {\n    const type_r2 = ctx.$implicit;\n    const ctx_r0 = i0.ɵɵnextContext();\n    let tmp_0_0;\n    i0.ɵɵadvance(1);\n    i0.ɵɵproperty(\"ngIf\", ctx_r0.channelsByType == null ? null : (tmp_0_0 = ctx_r0.channelsByType.get(type_r2)) == null ? null : tmp_0_0.length);\n  }\n}\nfunction ServerSidebarComponent_ng_container_6_div_3_Template(rf, ctx) {\n  if (rf & 1) {\n    i0.ɵɵelementStart(0, \"div\", 11);\n    i0.ɵɵelement(1, \"div\", 12);\n    i0.ɵɵelementStart(2, \"span\");\n    i0.ɵɵtext(3);\n    i0.ɵɵelementEnd()();\n  }\n  if (rf & 2) {\n    const member_r8 = ctx.$implicit;\n    i0.ɵɵadvance(3);\n    i0.ɵɵtextInterpolate(member_r8.profile.name);\n  }\n}\nfunction ServerSidebarComponent_ng_container_6_Template(rf, ctx) {\n  if (rf & 1) {\n    i0.ɵɵelementContainerStart(0);\n    i0.ɵɵelementStart(1, \"span\", 7);\n    i0.ɵɵtext(2, \"MEMBERS\");\n    i0.ɵɵelementEnd();\n    i0.ɵɵtemplate(3, ServerSidebarComponent_ng_container_6_div_3_Template, 4, 1, \"div\", 10);\n    i0.ɵɵelementContainerEnd();\n  }\n  if (rf & 2) {\n    const ctx_r1 = i0.ɵɵnextContext();\n    i0.ɵɵadvance(3);\n    i0.ɵɵproperty(\"ngForOf\", ctx_r1.server == null ? null : ctx_r1.server.members);\n  }\n}\nexport class ServerSidebarComponent {\n  ngOnChanges(changes) {\n    if (changes.server && this.server) {\n      this.channelsByType = this.groupChannelsByType(this.server.channels);\n    }\n  }\n  groupChannelsByType(channels) {\n    let output = new Map();\n    let types = [\"Text\", \"Audio\", \"Video\"];\n    output.set(types[0], []);\n    output.set(types[1], []);\n    output.set(types[2], []);\n    for (let channel of channels) {\n      output.get(types[channel.type])?.push(channel);\n    }\n    return output;\n  }\n}\nServerSidebarComponent.ɵfac = function ServerSidebarComponent_Factory(t) {\n  return new (t || ServerSidebarComponent)();\n};\nServerSidebarComponent.ɵcmp = /*@__PURE__*/i0.ɵɵdefineComponent({\n  type: ServerSidebarComponent,\n  selectors: [[\"app-server-sidebar\"]],\n  inputs: {\n    server: \"server\"\n  },\n  features: [i0.ɵɵNgOnChangesFeature],\n  decls: 7,\n  vars: 3,\n  consts: [[1, \"flex\", \"flex-col\", \"h-full\", \"w-[200px]\", \"bg-gray-900\", \"text-white\"], [1, \"p-2\", \"pt-1\", \"shadow-md\", \"shadow-black-900\", \"bg-slate-800\"], [1, \"p-2\"], [4, \"ngFor\", \"ngForOf\"], [4, \"ngIf\"], [\"class\", \"flex flex-col mb-4\", 4, \"ngIf\"], [1, \"flex\", \"flex-col\", \"mb-4\"], [1, \"opacity-50\", \"mb-2\"], [\"class\", \"hover:bg-gray-800 cursor-pointer p-2 pt-1 text-white rounded-md\", 4, \"ngFor\", \"ngForOf\"], [1, \"hover:bg-gray-800\", \"cursor-pointer\", \"p-2\", \"pt-1\", \"text-white\", \"rounded-md\"], [\"class\", \"flex items-center gap-2 hover:bg-gray-800 rounded-md p-2 pt-1 cursor-pointer\", 4, \"ngFor\", \"ngForOf\"], [1, \"flex\", \"items-center\", \"gap-2\", \"hover:bg-gray-800\", \"rounded-md\", \"p-2\", \"pt-1\", \"cursor-pointer\"], [1, \"rounded-full\", \"w-7\", \"h-7\", \"bg-gray-500\"]],\n  template: function ServerSidebarComponent_Template(rf, ctx) {\n    if (rf & 1) {\n      i0.ɵɵelementStart(0, \"div\", 0)(1, \"div\", 1)(2, \"span\");\n      i0.ɵɵtext(3);\n      i0.ɵɵelementEnd()();\n      i0.ɵɵelementStart(4, \"div\", 2);\n      i0.ɵɵtemplate(5, ServerSidebarComponent_ng_container_5_Template, 2, 1, \"ng-container\", 3);\n      i0.ɵɵtemplate(6, ServerSidebarComponent_ng_container_6_Template, 4, 1, \"ng-container\", 4);\n      i0.ɵɵelementEnd()();\n    }\n    if (rf & 2) {\n      i0.ɵɵadvance(3);\n      i0.ɵɵtextInterpolate(ctx.server == null ? null : ctx.server.name);\n      i0.ɵɵadvance(2);\n      i0.ɵɵproperty(\"ngForOf\", ctx.channelsByType == null ? null : ctx.channelsByType.keys());\n      i0.ɵɵadvance(1);\n      i0.ɵɵproperty(\"ngIf\", ctx.server == null ? null : ctx.server.members == null ? null : ctx.server.members.length);\n    }\n  },\n  dependencies: [i1.NgForOf, i1.NgIf, i1.UpperCasePipe],\n  styles: [\"\\n/*# sourceMappingURL=data:application/json;charset=utf-8;base64,eyJ2ZXJzaW9uIjozLCJzb3VyY2VzIjpbXSwibmFtZXMiOltdLCJtYXBwaW5ncyI6IiIsInNvdXJjZVJvb3QiOiIifQ== */\"]\n});","map":{"version":3,"mappings":";;;;IAWgBA,4BAEC;IAAAA,YAAkB;IAAAA,iBAAI;;;;IAAtBA,eAAkB;IAAlBA,gDAAkB;;;;;IANvBA,8BAEC;IACiCA,YAA6B;;IAAAA,iBAAO;IAClEA,wFAEuB;IAC3BA,iBAAM;;;;;IAJ4BA,eAA6B;IAA7BA,qEAA6B;IACpCA,eAA4B;IAA5BA,mGAA4B;;;;;IAL3DA,6BAA0D;IACtDA,sFAOM;IACVA,0BAAe;;;;;;IARLA,eAAuC;IAAvCA,4IAAuC;;;;;IAY7CA,+BAEC;IACGA,0BAAoD;IACpDA,4BAAM;IAAAA,YAAuB;IAAAA,iBAAO;;;;IAA9BA,eAAuB;IAAvBA,4CAAuB;;;;;IANrCA,6BAA8C;IAC1CA,+BAA8B;IAAAA,uBAAO;IAAAA,iBAAO;IAC5CA,uFAKM;IACVA,0BAAe;;;;IANaA,eAAkB;IAAlBA,8EAAkB;;;ACVtD,OAAM,MAAOC,sBAAsB;EAIjCC,WAAW,CAACC,OAAsB;IAChC,IAAIA,OAAO,CAACC,MAAM,IAAI,IAAI,CAACA,MAAM,EAAE;MACjC,IAAI,CAACC,cAAc,GAAG,IAAI,CAACC,mBAAmB,CAAC,IAAI,CAACF,MAAM,CAACG,QAAQ,CAAC;;EAExE;EAEAD,mBAAmB,CAAIC,QAAmB;IACxC,IAAIC,MAAM,GAAG,IAAIC,GAAG,EAAqB;IACzC,IAAIC,KAAK,GAAG,CAAC,MAAM,EAAE,OAAO,EAAE,OAAO,CAAU;IAE/CF,MAAM,CAACG,GAAG,CAACD,KAAK,CAAC,CAAC,CAAC,EAAE,EAAE,CAAC;IACxBF,MAAM,CAACG,GAAG,CAACD,KAAK,CAAC,CAAC,CAAC,EAAE,EAAE,CAAC;IACxBF,MAAM,CAACG,GAAG,CAACD,KAAK,CAAC,CAAC,CAAC,EAAE,EAAE,CAAC;IAExB,KAAK,IAAIE,OAAO,IAAIL,QAAQ,EAAE;MAC5BC,MAAM,CAACK,GAAG,CAACH,KAAK,CAACE,OAAO,CAACE,IAAI,CAAC,CAAC,EAAEC,IAAI,CAACH,OAAO,CAAC;;IAGhD,OAAOJ,MAAM;EACf;;AAvBWP,sBAAsB;mBAAtBA,sBAAsB;AAAA;AAAtBA,sBAAsB;QAAtBA,sBAAsB;EAAAe;EAAAC;IAAAb;EAAA;EAAAc;EAAAC;EAAAC;EAAAC;EAAAC;IAAA;MDTnCtB,8BAAmE;MAGrDA,YAAkB;MAAAA,iBAAO;MAEnCA,8BAAiB;MACbA,yFASe;MAEfA,yFAQe;MACnBA,iBAAM;;;MAvBIA,eAAkB;MAAlBA,iEAAkB;MAGOA,eAAyB;MAAzBA,uFAAyB;MAWzCA,eAA6B;MAA7BA,gHAA6B","names":["i0","ServerSidebarComponent","ngOnChanges","changes","server","channelsByType","groupChannelsByType","channels","output","Map","types","set","channel","get","type","push","selectors","inputs","features","decls","vars","consts","template"],"sourceRoot":"","sources":["C:\\Users\\anndr\\source\\repos\\DiscordAngualar2\\ClientApp\\src\\app\\server-sidebar\\server-sidebar.component.html","C:\\Users\\anndr\\source\\repos\\DiscordAngualar2\\ClientApp\\src\\app\\server-sidebar\\server-sidebar.component.ts"],"sourcesContent":["<div class=\"flex flex-col h-full w-[200px] bg-gray-900 text-white\">\n\n    <div class=\"p-2 pt-1 shadow-md shadow-black-900 bg-slate-800\">\n        <span>{{ server?.name }}</span>\n    </div>\n    <div class=\"p-2\">\n        <ng-container *ngFor=\"let type of channelsByType?.keys()\">\n            <div *ngIf=\"channelsByType?.get(type)?.length\"\n                class=\"flex flex-col mb-4\"\n            >\n                <span class=\"opacity-50 mb-2\">{{type | uppercase}} CHANNELS</span>\n                <a *ngFor=\"let channel of channelsByType?.get(type)\"\n                    class=\"hover:bg-gray-800 cursor-pointer p-2 pt-1 text-white rounded-md\"\n                ># {{channel.name}}</a>\n            </div>\n        </ng-container>\n        \n        <ng-container *ngIf=\"server?.members?.length\">\n            <span class=\"opacity-50 mb-2\">MEMBERS</span>\n            <div *ngFor=\"let member of server?.members\"\n                class=\"flex items-center gap-2 hover:bg-gray-800 rounded-md p-2 pt-1 cursor-pointer\"\n            >\n                <div class=\"rounded-full w-7 h-7 bg-gray-500\"></div>\n                <span>{{member.profile.name}}</span>\n            </div>\n        </ng-container>\n    </div>\n</div>","import { Component, Input, OnChanges, SimpleChanges } from '@angular/core';\nimport { Server } from '../models/server';\nimport { Channel, ChannelType } from '../models/channel';\n\n@Component({\n  selector: 'app-server-sidebar',\n  templateUrl: './server-sidebar.component.html',\n  styleUrls: ['./server-sidebar.component.css']\n})\nexport class ServerSidebarComponent implements OnChanges {\n  @Input() server?: Server;\n  channelsByType?: Map<string, Channel[]>;\n  \n  ngOnChanges(changes: SimpleChanges): void {\n    if (changes.server && this.server) {\n      this.channelsByType = this.groupChannelsByType(this.server.channels);\n    }\n  }\n\n  groupChannelsByType<T>(channels: Channel[]) {\n    let output = new Map<string, Channel[]>();\n    let types = [\"Text\", \"Audio\", \"Video\"] as const;\n\n    output.set(types[0], []);\n    output.set(types[1], []);\n    output.set(types[2], []);\n\n    for (let channel of channels) {\n      output.get(types[channel.type])?.push(channel);\n    }\n\n    return output;\n  }\n}\n"]},"metadata":{},"sourceType":"module","externalDependencies":[]}